{"version":3,"sources":["../src/app.ts"],"sourcesContent":["// Require('module-alias/register')\nimport { join } from \"path\";\nimport AutoLoad, { type AutoloadPluginOptions } from \"@fastify/autoload\";\nimport { type FastifyPluginAsync } from \"fastify\";\nimport { TypeBoxValidatorCompiler } from \"@fastify/type-provider-typebox\";\n\nexport type AppOptions = {\n  // Place your custom options for app below here.\n} & Partial<AutoloadPluginOptions>;\n\n// Pass --options via CLI arguments in command to enable these options.\nconst options: AppOptions = {};\n\nconst app: FastifyPluginAsync<AppOptions> = async (\n  fastify,\n  opts,\n): Promise<void> => {\n  // Place here your custom code!\n  void fastify.setValidatorCompiler(TypeBoxValidatorCompiler);\n  // Do not touch the following lines\n\n  // This loads all plugins defined in plugins\n  // those should be support plugins that are reused\n  // through your application\n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, \"plugins\"),\n    options: opts,\n  });\n\n  // This loads all plugins defined in routes\n  // define your routes in one of these\n  void fastify.register(AutoLoad, {\n    dir: join(__dirname, \"./entry-points/http/\"),\n    options: opts,\n  });\n};\n\nexport default app;\nexport { app, options };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAqB;AACrB,sBAAqD;AAErD,mCAAyC;AAOzC,IAAM,UAAsB,CAAC;AAE7B,IAAM,MAAsC,OAC1C,SACA,SACkB;AAElB,OAAK,QAAQ,qBAAqB,qDAAwB;AAM1D,OAAK,QAAQ,SAAS,gBAAAA,SAAU;AAAA,IAC9B,SAAK,kBAAK,WAAW,SAAS;AAAA,IAC9B,SAAS;AAAA,EACX,CAAC;AAID,OAAK,QAAQ,SAAS,gBAAAA,SAAU;AAAA,IAC9B,SAAK,kBAAK,WAAW,sBAAsB;AAAA,IAC3C,SAAS;AAAA,EACX,CAAC;AACH;AAEA,IAAO,cAAQ;","names":["AutoLoad"]}
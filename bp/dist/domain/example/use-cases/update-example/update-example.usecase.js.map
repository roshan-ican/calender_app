{"version":3,"sources":["../../../../../src/domain/example/use-cases/update-example/update-example.usecase.ts","../../../../../src/data-access/models/example.model.ts","../../../../../src/data-access/example.repo.ts"],"sourcesContent":["import { updateExample } from \"@/data-access/example.repo\";\nimport { type UpdateExampleDTO } from \"./update-example.schema\";\n\nconst updateExampleUseCase = async (\n  exampleId: string,\n  example: UpdateExampleDTO,\n) => {\n  const updatedExample = await updateExample(exampleId, example);\n  return updatedExample;\n};\n\nexport default updateExampleUseCase;\n","import mongoose from \"mongoose\";\nimport { type Example } from \"@/domain/example/example.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Define the example schema\nconst exampleSchema = new mongoose.Schema<Example>({\n  exampleId: { type: String, default: uuidv4() },\n  exampleName: { type: String, required: false },\n});\n\nexport const exampleModel = mongoose.model<Example>(\"example\", exampleSchema);\n","import { type Example } from \"@/domain/example/example.schema\";\nimport { exampleModel } from \"./models/example.model\";\n\nconst getExample = async () => {\n  const examples = await exampleModel.find();\n  return examples;\n};\n\nconst createExample = async (newExample: Omit<Example, \"_id\" | \"exampleId\">) =>\n  exampleModel.create(newExample);\n\nconst updateExample = async (\n  exampleId: string,\n  example: Omit<Example, \"_id\" | \"example_id\">,\n) => {\n  const updatedExample = await exampleModel\n    .findOneAndUpdate(\n      { exampleId },\n      {\n        $set: {\n          exampleName: example.exampleName,\n        },\n      },\n      { new: true },\n    )\n    .lean();\n\n  return updatedExample;\n};\n\nconst deleteExample = async (exampleId: string) => {\n  const example = await exampleModel\n    .deleteOne({\n      exampleId,\n    })\n    .lean();\n\n  return example;\n};\n\nconst getOneExample = async (exampleId: string) => {\n  const example = await exampleModel.findOne({\n    exampleId,\n  });\n\n  return example;\n};\n\nexport {\n  getExample,\n  createExample,\n  updateExample,\n  deleteExample,\n  getOneExample,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,sBAAqB;AAErB,kBAA6B;AAG7B,IAAM,gBAAgB,IAAI,gBAAAA,QAAS,OAAgB;AAAA,EACjD,WAAW,EAAE,MAAM,QAAQ,aAAS,YAAAC,IAAO,EAAE;AAAA,EAC7C,aAAa,EAAE,MAAM,QAAQ,UAAU,MAAM;AAC/C,CAAC;AAEM,IAAM,eAAe,gBAAAD,QAAS,MAAe,WAAW,aAAa;;;ACC5E,IAAM,gBAAgB,OACpB,WACA,YACG;AACH,QAAM,iBAAiB,MAAM,aAC1B;AAAA,IACC,EAAE,UAAU;AAAA,IACZ;AAAA,MACE,MAAM;AAAA,QACJ,aAAa,QAAQ;AAAA,MACvB;AAAA,IACF;AAAA,IACA,EAAE,KAAK,KAAK;AAAA,EACd,EACC,KAAK;AAER,SAAO;AACT;;;AFzBA,IAAM,uBAAuB,OAC3B,WACA,YACG;AACH,QAAM,iBAAiB,MAAM,cAAc,WAAW,OAAO;AAC7D,SAAO;AACT;AAEA,IAAO,iCAAQ;","names":["mongoose","uuidv4"]}